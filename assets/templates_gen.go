package assets

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"strings"
)

func bindata_read(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	return buf.Bytes(), nil
}

var _templates_action_tmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x54\x4b\x6f\xdb\x38\x10\xbe\xeb\x57\x0c\x08\x9f\x82\x85\x74\x5f\xd0\x3a\xec\x22\x8b\x2c\xe0\x3e\xd0\xba\xe8\x31\xa0\xc5\x91\x34\x08\x45\x09\x24\x1d\xc7\x20\xf8\xdf\x0b\x3e\x1c\x3b\x86\x93\x53\x7b\x12\x35\x8f\x6f\xbe\x6f\x86\x43\xdf\xdc\x55\xdb\x91\x2c\x90\x05\x37\x22\x88\xce\xd1\xac\xc1\xe1\xb4\x28\xe1\xb0\xae\xfe\x77\x20\xd1\xa1\x99\x48\xa3\x85\x71\x3e\xa4\xb0\x7e\x36\x93\x70\x8e\xf4\x50\x32\x2c\x08\x83\x60\x50\x4b\x34\x28\xeb\xea\xae\x09\x55\xe5\xbd\xc4\x9e\x34\x02\xb3\x98\xa2\x58\x08\x15\x00\x1f\xbd\x57\xa8\xa1\xfe\xbc\x9f\x76\x68\x42\x00\x92\x6b\xb6\xfd\xf2\xef\xa3\xf7\xf5\x7f\x19\x19\xe5\xc9\xc9\xda\x5b\x56\xf0\xbe\xde\x92\x53\x18\x02\x6f\xae\xf1\xda\x0a\xc0\x7b\x23\xf4\x80\x50\xdf\x2b\x9c\x42\xf0\x1e\x15\x4e\xb0\xaa\xb7\x45\x19\xd4\xc9\xa8\x65\x08\xd5\xe9\x7b\x41\x58\x91\x75\x85\xed\x5e\xbd\xc1\xfb\x67\xaf\x14\xba\xe4\x02\xe0\x8a\x5a\xef\xad\x3b\xaa\x04\xc8\x1b\x45\x39\x38\x03\x02\xf0\x26\xa6\xdf\x28\xe0\xf0\xa5\x14\xf0\x9e\x7a\xa8\xbf\x1a\xcc\x09\x92\x9e\xa1\x53\xc2\xda\x35\xeb\x66\x89\xac\xe5\x8b\xc1\xf6\xb5\xfc\x26\xce\x21\x52\x3f\xf3\xe7\x4d\x8c\xe0\x8d\xa4\xe7\x52\x5c\xd9\x02\xb6\xb4\x89\xe6\x29\x7b\x45\x7f\xc1\x4a\xc1\xdf\xeb\x0b\x1c\xea\x61\x45\xf1\x70\x9a\x39\x30\x8d\x07\x45\x1a\x59\x11\x59\xca\x9c\x74\xae\xd4\xb9\x73\x51\xe0\x72\xa9\xf8\x86\xd2\xa4\xe2\xa6\xb6\x54\x7c\x51\xe2\x28\x76\xb9\x7f\xe9\x67\x30\xf3\x5e\xcb\x02\xc4\x4a\x7b\xee\x25\xb9\x10\xba\x59\x3b\xd4\x0e\x25\xb9\x98\xb2\x66\xce\xec\x91\x81\x5d\x50\xa9\x6e\xc4\xee\x69\xcd\x7a\xa1\x2c\xb2\x92\x1d\xaf\xce\x16\x5f\x5c\xec\x51\xea\xce\x0d\x7a\x34\x89\x21\xf1\xbb\x64\x97\x8d\x51\x18\xa7\x69\x00\x6b\xba\x35\xf3\xbe\xfe\xf1\x6d\x13\x02\xf3\xfe\x40\x6e\x84\xfa\x01\x69\x18\x5d\x08\x30\xa6\x43\x8a\x48\xee\xd2\xae\x1c\xf5\x93\xa4\x1b\x43\x80\x43\xfc\x5e\xc5\xb4\xd5\xfb\xbc\x9e\x49\xe2\x7c\xcd\x2b\x1b\x13\xaf\x74\x84\xdf\xc7\x05\x62\x73\xcd\xac\x6c\xbe\x32\xdc\xce\x7b\xd3\xe1\x95\x74\x70\xc7\x05\xd3\xff\xf7\xe4\xde\x1e\x17\x8c\x2b\x9a\x2e\x42\x62\xf4\x91\xa4\x9d\xe8\x9e\xf2\x74\xaf\x75\x5d\x78\xde\x69\xfa\x47\xb8\xd4\x1b\x31\xe5\x19\xe6\xe3\x9f\x1b\x18\x6f\x72\x85\x9b\x3c\x14\xe9\x27\x16\x02\x5f\x4e\xb2\x92\xa1\xe5\x02\x46\x83\xfd\x9b\x36\x0a\x33\xa0\x5b\xb3\xc7\x9d\x12\x31\xe4\xf5\x0d\xd9\x88\x1d\xaa\x78\x5d\x45\x1b\x37\xeb\x46\x91\xd1\x4d\x8a\xa5\x07\xe0\x61\xfb\x69\x73\x5e\xc5\xcb\x8d\x13\x4b\x79\x6d\x79\x4f\x43\xf9\x3b\xd7\x38\x6d\xc4\x1b\x5f\x06\xf9\x15\x00\x00\xff\xff\x4a\x11\x92\x8a\x0f\x06\x00\x00")

func templates_action_tmpl() ([]byte, error) {
	return bindata_read(
		_templates_action_tmpl,
		"templates/action.tmpl",
	)
}

var _templates_article_tmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x56\xdf\x6f\xdb\xb6\x13\x7f\xf7\x5f\x71\x5f\x7e\x87\xc6\x69\x63\xaa\x4d\x87\x2d\x6b\x2c\x0f\x69\x96\x0d\x05\x86\x34\xc0\xbc\x87\x21\x08\x82\xb3\x74\x96\xd8\xd0\xa4\x46\x9e\xec\x79\xaa\xff\xf7\x81\x96\xe4\xc8\x3f\xb2\x02\xed\xf6\xb0\x17\x9b\xe2\x1d\xef\xee\xf3\x21\xef\x47\x15\x3d\x87\x71\xae\x3c\x28\x0f\x9c\x13\xa0\x63\x95\x68\x02\xa6\x59\xa1\x91\x49\xc2\x3b\x86\x94\xa6\xca\x90\x87\xdc\x2e\x5a\x05\x0f\xe8\x08\xa6\xd6\xcd\x90\x99\x52\x09\xcf\xa3\x55\xaf\x57\x55\xb5\x2a\x08\x67\x2d\x8b\xd5\xaa\x37\xfc\xdf\x0f\xef\x2f\xc7\xbf\xdd\x5c\x41\xce\x33\x3d\xea\x0d\xeb\x3f\x80\x61\x4e\x98\x86\x05\xc0\x90\x15\x6b\x1a\x55\x95\x1c\x87\xc5\x6a\x35\x8c\xea\x9d\x5a\xaa\x95\x79\x00\x5e\x16\x14\x0b\xa6\x3f\x38\x4a\xbc\x17\xe0\x48\xc7\xc2\xf3\x52\x93\xcf\x89\x58\x40\xee\x68\x1a\x8b\xc8\x33\xb2\x4a\xa2\x26\x4a\x19\x74\x1b\x33\x33\x62\x84\x24\x47\xe7\x89\xe3\xa3\x92\xa7\x83\xb3\xa3\x46\xe4\x13\xa7\x0a\xae\x3f\x00\xa2\x08\xde\x19\xc5\x0a\xb5\xfa\x93\xe0\x27\x6b\x33\x4d\x70\x61\x50\x2f\x59\x25\x1e\xd8\x61\xf2\xa0\x4c\x06\x89\x4d\x09\xac\x81\xc2\xd9\xb4\x4c\x58\x59\x03\x5e\x71\xd8\xd2\x4b\xd9\xd8\x52\x53\xe8\x2f\x94\x49\xed\xe2\x56\x68\x9b\x60\xd0\x12\x77\xf0\xec\x19\xec\xef\xde\x8a\xdc\x7a\x36\x38\x23\x71\x07\x71\x0c\x82\x51\x3f\x78\x99\x59\x8d\x26\x93\xd6\x65\xe2\x18\xaa\xc6\x2e\xc0\x1c\x1d\xdc\x67\xf8\x3b\xc4\xf5\xdf\xc7\x8f\x70\x7b\x77\xbe\x11\x87\x3d\x59\x94\x3e\xef\xdf\x8a\x7b\x4f\x7c\x91\x24\xb6\x34\x2c\x4e\x40\xfc\x7a\x31\x78\xf5\xea\xf4\xf4\xf4\xf5\xd9\xab\xc1\x37\xe2\xee\xf8\xf0\xa1\x89\xdc\x3f\xf6\xf5\x77\x67\x67\x2f\x5f\x9f\x7e\xbb\x73\xac\x86\x22\xd7\xc4\xdc\x60\x46\x73\x45\x0b\x88\x61\x5a\x9a\x35\x2b\xfd\x6e\xd8\x3b\x91\x6d\x9d\x11\x27\xd0\xb2\x21\x0b\xe4\x3c\x50\xf1\x62\xb3\x93\xa3\xcf\xbb\x5e\xf7\xc2\xfd\x02\x5b\xab\xbf\x07\xd3\x7f\x02\xec\xd5\x9c\x0c\x77\x91\x26\xc8\x94\x59\xb7\x3c\x01\x5c\x6f\x9c\x80\x2d\xf8\x5e\xe3\x84\x74\xbd\x9c\xa3\x2e\xa9\x5e\x1a\x6b\x94\x61\x72\xb5\xe6\xa7\x38\x5a\xbb\x12\x27\xf0\xf9\x1e\x3e\xcd\xdd\x3f\xeb\x63\xc3\xe9\xaa\x4e\xb2\xe8\x31\xcb\x86\x51\x9d\xfc\x61\x39\xb1\xe9\xb2\x49\xc3\x54\xcd\x41\xa5\xb1\x60\x5b\x4c\xd0\x09\x48\x34\x7a\x1f\x8b\x85\x4a\x49\xb4\xc9\xb9\x56\x6a\x04\x89\x35\x8c\xca\x90\xdb\x48\x3b\x46\x82\x07\x65\x32\xd1\x29\x2b\x1d\xf8\x55\xb5\x50\x9c\x83\xfc\xa5\x9c\x70\x2d\xac\x2a\x19\x7e\xc8\xa4\x3b\x8a\x6a\x0a\xf2\xa2\xe4\xdc\x3a\xbf\x25\x09\x32\x87\x26\xa3\xa7\xc4\xdb\xc1\xe2\x5a\xa7\x13\xe9\x9e\x95\x2b\x4d\xb3\x75\x08\x9a\x66\xf0\x95\x1c\x37\x15\x18\x0e\xc6\x55\x53\x9a\xaa\xf9\x68\x27\xa4\x7d\x00\xdb\x3b\x5b\x87\x3a\x1f\xdd\x65\xcb\x61\x81\x19\x7d\xde\x35\x6c\xf8\xa5\xf5\xbb\xd8\xa6\xa6\x73\xd1\xc9\xc6\xbc\xb1\x83\xc2\x29\xc3\x3b\x0c\x75\x75\xc3\x95\x8a\xd1\xa5\x35\x4c\x86\xfd\x41\xf4\x6d\xdb\x02\x31\x7e\x7f\x29\x02\x75\xbd\x27\xf9\x6a\x99\xe9\xed\xdd\xc4\xc1\xa8\x0f\x5e\xcc\xae\xb1\x2a\xf4\x53\x3b\x85\xc6\x02\x4c\xb4\x4d\x1e\x42\x6f\xdc\xb8\xd9\xa7\xbc\x07\x9b\x77\x76\xa3\x71\x79\x65\x70\xa2\xa9\xbd\xb2\xa6\x37\x81\x77\x49\x7c\x14\x15\x1a\x97\xf2\x83\x3f\x1a\x75\xb3\x69\x07\xc9\x4e\x37\xeb\x1f\x2c\xc3\x51\x04\x3f\x5b\x4c\xbf\xb0\xbb\xfd\x9b\xfd\xad\xee\x70\x19\x42\x0c\xa9\x4d\xca\x19\x19\x96\x89\x23\x64\x0a\x79\x42\x86\xfb\xa2\x06\x2a\x8e\xcf\x21\x43\x19\x06\x04\x08\x46\xc3\x88\xf0\x01\xe7\xd8\x48\xd7\x42\xf4\x4b\x93\x40\x0c\xec\x4a\xea\x56\xc1\x0c\xa5\x77\x41\xd0\x17\x39\x73\xe1\xdf\x88\x10\xd8\xc6\xdf\x63\x07\x71\x96\x6d\x62\x35\x7c\x0f\x8d\x62\x14\x79\xaf\x05\xbc\xa9\xbf\xdf\x44\xd1\x62\xb1\x10\xc7\xf0\x02\x84\xcc\xd6\x9c\x0e\xb0\xe5\x54\x26\x76\x16\x65\x28\x3f\x78\x71\xbe\x03\xcf\x77\xd1\x65\xc4\x0d\x34\xff\x76\x39\xc6\xec\x1a\x67\xf4\x08\xf2\xf6\xe5\xdd\x39\x78\x59\xa0\x23\xc3\xd7\x36\x25\xa9\x8c\x27\xc7\x6f\x69\x6a\x1d\xf5\x33\x3c\x01\xdf\xad\xbe\x6d\xf1\x3d\x6e\x9b\xd7\x76\x01\xae\xcb\xee\x30\xaa\xc7\xb1\xcd\x03\x7a\x1c\xe0\x42\xfe\xac\xdf\xe0\xb0\xd4\x6d\x8e\xb2\x4d\x06\xb6\xe4\x26\xd3\x37\xe9\xd2\x3e\x55\xad\x46\x43\x6c\x06\xb1\xff\x8f\xdf\x5f\xde\x57\x95\xfc\xb1\x9d\x10\xaf\xcb\xd9\x84\xdc\x6a\x25\xb6\xe6\x3c\x1c\x0d\x23\xad\xda\x57\xbc\x5b\x33\x76\xf2\x79\xf0\xce\x84\x2a\xb3\x5d\x10\x1f\x57\xc3\xa8\x7c\x12\x4a\x73\xf4\x10\x20\x65\xcc\x7f\x0d\x90\xa1\x85\x56\x86\x02\x9c\x75\xc1\xb9\xb6\x80\x25\xdb\x59\x18\x7d\x21\x48\x60\xe2\x08\x1f\x24\xdc\xa0\xc3\xcc\x61\x91\x37\xe3\xba\x23\x1a\x84\x99\x5d\xd6\x25\xa9\x35\xfd\x57\x00\x00\x00\xff\xff\xf2\x4c\xe4\x2e\x05\x0c\x00\x00")

func templates_article_tmpl() ([]byte, error) {
	return bindata_read(
		_templates_article_tmpl,
		"templates/article.tmpl",
	)
}

var _templates_dir_tmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xcc\x57\x5f\x6f\xdb\x36\x10\x7f\xcf\xa7\xb8\x71\x40\xe1\xa0\xb6\xd8\xa4\xc5\x96\x25\x92\x86\x34\xc9\xba\x02\x41\x1b\x2c\xde\xc3\x10\x04\x05\x43\x9e\x25\x36\x14\xa9\x92\x27\xa7\x9e\xeb\xef\x3e\x50\x92\xff\x64\xee\x92\xad\x28\xb6\x3d\x59\x3c\xde\x1d\x7f\xf7\x3b\xde\xf1\x9c\x7e\x73\xfa\xf6\x64\xfc\xdb\xc5\x19\x94\x54\x99\x7c\x27\x5d\xfe\xa0\x50\xf9\x0e\x40\x5a\x21\x09\x28\x89\xea\x11\x7e\x68\xf4\x34\x63\x27\xce\x12\x5a\x1a\x8d\x67\x35\x32\x90\xdd\x2a\x63\x84\x1f\x89\x47\xe3\x23\x90\xa5\xf0\x01\x29\x6b\x68\x32\x3a\x60\xad\x17\xd2\x64\x30\x1f\x0b\x73\x1b\x60\x04\xe3\x12\xe1\x95\x83\x0b\xef\x0a\x2f\xaa\x4a\xdb\x02\xce\x85\x2d\x1a\x51\x60\xca\x3b\xd5\x68\x64\xb4\xbd\x05\x9a\xd5\xd8\x7b\x97\x21\x30\xf0\x68\x32\x16\x68\x66\x30\x94\x88\xc4\xa0\xf4\x38\xc9\x18\x0f\x24\x48\x4b\xae\xb4\x4f\xa2\x5e\xeb\x20\x48\xaf\x6b\x82\xe0\xe5\x7d\x85\xf7\x81\xe5\x29\xef\x76\x37\x14\xe3\x27\x00\xe7\xf0\xda\x6a\xd2\xc2\xe8\xdf\x23\x4c\x57\x18\x84\x63\x2b\xcc\x8c\xb4\x0c\x40\x5e\xc8\xdb\x88\x58\x3a\x85\xe0\x2c\xd4\xde\xa9\x46\x92\x76\x16\x82\xa6\x28\x32\xb3\xa4\xf5\xa4\x27\x30\xb8\xd3\x56\xb9\xbb\x2b\x66\x9c\x14\x51\x87\x5d\xc3\x93\x27\xb0\x2d\xbd\x62\xa5\x0b\x64\x45\x85\xec\x1a\xb2\x0c\x18\x45\xae\x92\xc2\x19\x61\x8b\xc4\xf9\x82\xed\xc2\xbc\xf5\x0a\x30\x15\x1e\xde\x15\xe2\x03\x64\xdd\xcf\xa7\x4f\x70\x75\x7d\xd4\x6f\x46\x49\x52\x37\xa1\x1c\x5c\xb1\x77\x01\xe9\x58\x4a\xd7\x58\x62\x43\x60\xbf\x1e\x8f\xf6\xf6\xf6\xf7\xf7\x9f\x1f\xec\x8d\xbe\x63\xd7\xbb\x9f\x33\xb9\x49\xb6\x8d\x5e\xfc\x70\x70\xf0\xec\xf9\xfe\xf7\xf7\x8c\xba\x10\x92\x96\x8e\x0b\x51\xe0\x54\xe3\x1d\x64\x30\x69\x6c\xcb\xc5\x60\x0d\xf7\x4f\x98\xee\x59\xb0\x21\x2c\x39\x48\x6a\x41\x65\x24\xe0\xe9\x4a\x52\x8a\x50\xae\x4f\xdc\x02\xfa\xc5\x9e\x16\x0f\x05\x31\xf8\x6c\x88\x67\x53\xb4\xb4\x19\x9f\x14\x84\x85\xf3\xb3\x21\x88\x56\x30\x04\x57\xd3\x3b\x23\x6e\xd0\x74\x9f\x53\x61\x1a\xec\x3e\xad\xb3\xda\x12\xfa\x4e\xf3\x61\x66\xda\x83\xd8\x10\xbe\xdc\xff\x63\x8c\x7d\xcd\x13\x7a\x26\x17\xb1\x88\x56\x05\x95\xf2\xae\x7b\xa4\x37\x4e\xcd\xf2\x9d\x9d\x54\xe9\x29\x68\x95\x31\x72\xf5\x8d\xf0\x2c\x6f\x05\xd2\x88\x10\x32\x16\x1b\x88\xd0\x16\x3d\x8b\x9a\x13\xe7\x2b\xa8\x90\x4a\xa7\x32\xf6\xea\x6c\xcc\x7a\x6c\x19\xe3\x7c\x5d\x0b\x3c\xa0\xf0\xb2\x64\xf9\xda\x75\x85\xb6\x89\x6b\xd1\xf7\x83\xd8\xb1\x0e\xef\xd9\x28\x27\x39\xcb\x4f\x9d\x6c\x2a\xb4\x14\x52\x2e\x1e\x54\xf7\x38\x61\xf9\x2f\x38\x41\x8f\x56\xe2\xa3\xea\xf5\x6d\xc1\x59\x7e\x21\xe4\xad\x28\xfe\x86\xb6\x77\xef\x51\x12\x67\x79\x6c\x85\x17\xdd\xea\x31\xa3\x12\x4d\xcd\x59\xfe\x33\x9a\xba\x53\xd5\xb6\x6e\x68\xa3\x41\xb2\x96\x89\x9e\x1b\x88\x05\x90\xb1\x0f\x6c\x49\xb4\xb6\x91\xca\x29\x32\x68\xf3\x9a\xb1\xcb\x15\x89\x5c\xe9\xe9\x06\x97\x31\x7b\xda\x16\x2c\x5f\x81\xe9\x81\xfe\x65\xcf\x16\xf9\xd2\x07\x8f\x19\x8c\x99\x6c\xd7\xbd\x74\xed\xba\x16\x05\xc6\x44\x03\xa4\xe5\x5e\xfe\xca\x41\xdb\xe6\x52\x5e\xee\xb5\xc2\xf9\xfc\x4e\x53\x09\xc9\x85\xa0\x72\xb1\x48\xcb\xfd\x7c\x3e\x4f\x16\x8b\x94\xb7\x5f\x68\xd5\x62\xb1\xa9\x76\xec\x49\x4b\x83\x61\xd1\xde\xbf\xf2\x45\xbe\x14\x1c\xa6\xbc\x7c\xd1\x76\x76\x65\xf2\xd6\xc0\x0b\x5b\x20\x24\x9d\xa6\x52\x1b\xa1\xcd\xe7\xfd\x71\x2c\x1e\xf6\x46\x54\x18\x0f\x14\xf9\x21\xcc\xe7\xc9\x38\x3e\x46\x71\xad\x54\xe7\xa7\xc3\x10\x6f\xfb\xd2\xf3\x16\xaa\x4b\xa3\xd5\x06\xa6\x76\x09\x0a\xe5\xed\x7f\x0b\xeb\x2d\x95\xe8\x57\xa8\x7e\xd2\x5f\x89\xa6\x7f\x84\xe1\x54\xfb\x0d\x62\x9a\x9b\x91\xd2\x1e\x25\x39\xaf\xff\x35\x30\x5b\x57\x72\xe2\x1c\xb5\xdd\xe7\xec\xa3\xc4\x9a\x40\x04\xb8\x57\x84\xe1\x90\x73\x85\x53\x34\xae\x46\x1f\x5f\xe4\x38\x10\x24\xd2\x55\x3c\x3e\xf7\xa3\xda\x19\x2d\x35\x86\x6f\x3d\x06\xf2\xba\xed\x56\x81\xe5\xd6\x11\xaa\x08\x69\xb8\x43\x25\x2e\xc7\x24\x70\x13\xa0\x52\x07\x88\x75\x00\x3a\x80\xd1\x12\x6d\x40\x05\x8d\x55\xe8\x81\x4a\xdc\x39\xf1\x28\x62\x9d\xc2\x89\xab\x2a\x67\x03\x1c\x13\x79\x7d\xd3\xb4\x13\xc6\xf3\xe4\x19\x9c\x77\x36\xc3\x1d\x61\x55\x37\x85\x6c\x3b\x12\xf0\x40\x23\x39\x7f\x7d\x72\xf6\xe6\xf2\x8c\xe5\x2f\x2f\x4f\x97\x86\x11\x6a\x92\xde\xf8\x47\x5b\x28\xb9\x90\xc4\x31\x8f\xe5\x63\xf4\x55\x88\x11\x5d\xa2\x9f\x6a\xd9\xba\x80\x4f\x5b\xf6\x77\x77\x77\x9b\xa4\x69\x4b\x86\xa3\xe5\x4b\xde\x78\xed\xf5\x54\xc8\x59\xec\x9e\xdd\x17\x5c\xc4\xad\x59\xd7\xe3\x96\xd9\x5a\x4f\x68\x83\xad\x11\x83\x73\x38\x77\x42\xfd\x6f\x67\xb5\x42\x40\x06\xaa\x7f\x78\x12\x19\xf3\x8b\x67\x06\xe3\x6a\xc0\xba\xc0\xd8\xee\x11\x14\x22\x89\xbd\x1c\xa2\xc3\x38\xee\xbe\x17\x53\xd1\xef\xb6\x9b\x22\xcc\xac\x84\x0c\xc8\x37\xb8\x7c\x7f\x0b\x91\x04\x1f\x85\x83\xfe\xae\xb2\x08\x68\x75\xd6\x7a\x22\xf2\x8e\x9c\x74\x06\x7e\x84\xd5\xa5\x0e\xc1\x30\x38\x84\x8d\x3c\xb1\x5d\x78\x0a\xac\xcf\xd6\x48\x2c\x79\x6c\xf3\x56\x88\x38\x36\x1f\x6d\x84\x15\x36\xa3\x2a\x90\xfa\x90\xc2\xcb\xd9\x58\x14\xb1\x26\xd7\xc1\x5d\x3d\xbb\x3e\x82\x90\xd4\xc2\xa3\xa5\x37\x4e\x61\xa2\x6d\x40\x4f\x2f\x71\xe2\x3c\x0e\x0a\x31\x84\xb0\xbb\x1e\x25\x16\xbb\x71\x08\xdb\x1c\x28\xba\x49\x22\xe5\xdd\xbf\x93\x3f\x02\x00\x00\xff\xff\x96\xb9\x13\x72\xb5\x0c\x00\x00")

func templates_dir_tmpl() ([]byte, error) {
	return bindata_read(
		_templates_dir_tmpl,
		"templates/dir.tmpl",
	)
}

var _templates_slides_tmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x57\x6d\x6f\xdb\x36\x10\xfe\x9e\x5f\x71\x25\x82\xda\x69\x63\x2a\x71\x86\x2e\x4b\x6c\x0f\xe9\x96\xad\x1d\xba\x2c\x40\xdd\x0f\x5b\x10\x14\xb4\x74\x96\xd8\xd0\xa4\x47\x9e\xec\x6a\xaa\xff\xfb\x40\x52\xb6\x95\x97\xb6\xdb\xba\x7e\x32\x79\x7c\xee\xed\x21\x7d\x77\xaa\x93\x27\x30\x2e\xa4\x03\xe9\x80\x0a\x04\xa7\x64\x86\x40\x38\x9b\x2b\x41\xc8\xe1\x25\x41\x86\x53\xa9\xd1\x41\x61\x96\x30\xb7\xe8\x50\x93\x20\x69\xb4\x03\x61\x11\xa6\xc6\xce\x04\x11\x66\x1c\x9e\x24\xab\x9d\x9d\xba\x8e\x78\x60\xd6\x18\x62\xab\xd5\xce\xe0\xd1\x8f\xbf\xfd\x30\xfe\xfd\xf2\x1c\x0a\x9a\xa9\xd1\xce\x20\xfe\x00\x0c\x0a\x14\x99\x5f\x00\x0c\x48\x92\xc2\x51\x5d\xf3\xb1\x5f\xac\x56\x83\x24\x4a\xe2\xe9\x0c\x49\x40\x5a\x08\xeb\x90\x86\x9d\x92\xa6\xbd\xe3\x4e\x73\xe4\x52\x2b\xe7\x14\x37\x00\x0b\x61\x41\x1b\x42\x77\xae\xc5\x44\x61\x06\x43\xa8\x6b\x7e\xd1\x92\xac\x56\xa7\x51\x31\x69\x6b\x36\x66\xc0\xd9\x74\xd8\x49\x9c\x4f\x30\x4d\x02\x17\x8e\xbf\x73\x9d\xd1\x16\x1d\xe0\x75\x2d\xa7\x70\xc7\xec\xc7\xc2\x71\x98\x46\xb6\x42\x28\xaf\x9b\xdd\x3a\x8c\x88\x09\xb9\x06\x73\x11\x35\xde\xec\xd7\x76\x3f\x1f\x6d\x48\xfb\x4e\xb0\x31\x56\xd4\x3e\xbc\x87\xe2\x4b\x12\x78\xa9\x25\x49\xa1\xe4\x5f\x08\x3f\x1b\x93\x2b\x84\x33\x2d\x54\x45\x32\x75\x40\x56\xa4\x37\x52\xe7\x90\x9a\x0c\xc1\x68\x98\x5b\x93\x95\x21\x01\x70\x92\xbc\x48\x55\xbc\xb1\x25\xa7\xd0\x5d\x4a\x9d\x99\xe5\x15\x53\x26\x0d\x4f\x84\x5d\xc3\xe3\xc7\x70\x5f\x7a\xc5\x0a\xe3\x48\x8b\x19\xb2\x6b\x18\x0e\x81\x91\x50\x37\x8e\xe7\x46\x09\x9d\x73\x63\x73\xb6\x07\x75\x63\x37\x32\xf4\x36\x17\x7f\xc2\x30\xfe\x7c\xf8\x00\x57\xd7\xa7\x9b\x63\x2f\xe3\xf3\xd2\x15\xdd\x2b\xf6\xd6\x21\x9d\xa5\xa9\x29\x35\xb1\x7d\x60\x6f\xce\x7a\x87\x87\xfd\x7e\xff\xe8\xf8\xb0\xf7\x8c\x5d\xef\x3d\xac\x34\xe1\xf7\xd5\xbe\xf9\xee\xf8\xf8\xe0\xa8\xff\xed\x1d\xb5\x98\x0a\x0f\xc4\x5c\x8a\x1c\x17\x12\x97\x30\x84\x69\xa9\x03\x2b\xdd\x76\xd8\x77\x22\xbb\xa5\xc3\xf6\x61\xcd\x06\x9f\x0b\x2a\x3c\x15\x4f\x37\x92\x42\xb8\xa2\xed\xf5\x5e\xb8\x5f\x60\x6b\xf5\xe9\x64\xba\x1f\x49\xf6\x7c\x81\x9a\xda\x99\xa6\x82\x30\x37\xb6\xda\x07\x11\x04\xfb\x60\xe6\xf4\x56\x89\x09\xaa\xb8\x5c\x08\x55\x62\x5c\x6a\xa3\xa5\x26\xb4\x11\xf9\x39\x8e\x82\x2b\xb6\x0f\xff\xdd\xc3\xe7\xb9\xfb\x7f\x7d\x6c\x38\xbd\xff\x67\x1d\x24\xb1\xc8\xf9\xe5\xc4\x64\x15\x38\xaa\x14\x0e\x3b\x99\x74\x73\x25\xaa\x13\xd0\x46\x63\x67\xb4\xfe\x77\xc6\xea\x00\xa9\x12\xce\x0d\x3b\xb1\x00\x81\x12\x95\x29\xa9\xb7\xf4\x9b\xd4\x22\xea\x35\x1e\x60\x20\x2c\xc9\x74\x5d\x27\x83\xa4\x38\xbc\x55\x46\x8b\xc3\xed\x59\x5d\x2f\x25\x15\xc0\x5f\x97\x13\x6a\xce\x8b\x23\x8f\x0e\x40\xbf\x8a\xa5\x62\x8b\x97\x53\x5f\x4e\x81\x8f\xe5\x0c\xf9\x4b\xf7\x07\x5a\xb3\x51\x0a\xb2\x9f\x42\xf9\x07\xd6\x87\x5f\x84\x2e\x85\xad\xa0\x7f\x70\xf0\x8c\x7d\xd4\xa0\x15\x3a\x47\xe0\x67\x25\x15\xc6\xba\xd6\x11\xc0\x20\x93\x8b\x26\x73\xd6\xf4\x19\xb4\x6c\xd4\x42\xb4\x0c\x8c\xf1\x3d\x9d\x2b\x9c\xad\x56\x75\x8d\x0a\x67\xb0\xcb\xc7\x4d\xd3\x02\x1e\x84\xb7\x1c\xfb\x8b\xc8\xe4\xa2\x4d\x45\x1b\x30\x48\x36\x3c\xee\x6c\x9d\xec\xca\x7d\xd8\x75\x70\x32\x84\x56\xd9\xf6\x17\xf9\xa8\xd7\x03\x47\xc2\x12\x98\x69\xd3\x31\xeb\x7a\xd7\xf1\x8b\x72\x36\x41\xbb\x5a\x41\xaf\x37\xba\x73\x41\x11\xf0\x62\xfc\xeb\xab\x33\x22\x2b\x27\x65\xa8\xed\x6b\x54\x20\x7a\xd7\xf1\x98\x51\xeb\x2e\x3d\x85\xbb\xae\x75\x9b\x47\xa3\x7b\x64\x6e\xf4\xfe\x01\x13\x1e\xe2\xf0\x96\x8b\xfe\x5d\x17\xfd\x6d\x54\xb7\x38\x72\x73\xa1\x37\xf7\x23\x72\xd4\x21\x5b\x36\xaa\xeb\x66\xe7\xc9\x3a\xf4\x26\x3c\x72\x74\x9f\xda\x86\x39\xd4\xd9\xa7\x79\x6b\xfc\xd6\x7e\x36\x31\x53\x78\x1d\x80\x13\x65\xd2\x1b\x3f\x62\xac\x3e\xf5\xf6\x8f\x46\xe3\x42\xe8\x1b\xa8\x4c\xf9\x30\x59\x5f\xfe\xf2\xbe\xd6\xab\x0b\x75\x23\x3e\xb3\xf5\xde\x87\x25\xb3\x21\x2b\x50\xcd\x37\xe1\xbc\x71\x18\x26\x35\x85\x53\x02\xa1\x33\xb0\x32\x2f\x08\x84\xb5\x66\x09\x37\x58\x39\x30\x16\x52\x25\xd3\x9b\x07\x60\x8d\x0d\xcc\x72\x74\x9e\x5b\x8f\xf0\xb7\x07\x64\x40\x8b\x85\xcc\x7d\x26\x13\xa4\x25\xa2\x86\x66\xfe\x19\x4c\xec\xda\x77\xf7\xd2\xa2\x73\xd0\x79\xd1\xf1\x4e\x36\x0a\x64\xa0\x08\x63\xa3\x1f\x24\x67\xe8\x9c\xc8\x91\xef\xed\xb4\x08\x68\x4d\x4d\x97\x4a\x54\x0f\x0e\x4d\xcd\x38\xe3\xcb\xe2\xbf\x1c\x63\xba\x0f\xf6\xdf\x24\x81\x57\x46\x64\x5f\x38\xd6\x7c\xcd\xc1\x26\x8e\x36\xb9\x80\x21\x64\x26\x2d\x67\xa8\x89\xa7\x16\x05\xa1\x7f\x64\xa8\xa9\xcb\x62\xa2\x6c\xef\x14\x72\xc1\xa9\x9a\x23\x78\xa3\xf8\x9e\x92\x77\x62\x21\x9a\xd3\x70\x28\x5c\xa5\x53\x18\x02\xd9\x12\xdb\xed\x2f\x17\xdc\x59\x7f\xd0\x65\x05\xd1\xdc\x9d\x30\x1f\xd8\xc6\xdf\x76\x74\xb0\x86\x4c\x6a\x14\x7c\x0f\x0d\x30\x49\x9c\x53\x0c\x4e\xe2\xfe\x24\x49\x96\xcb\x25\xdb\x83\xa7\xc0\x78\x1e\x38\xed\x89\x35\xa7\x3c\x35\xb3\x24\x17\xfc\x9d\x63\xa7\x77\xd2\x73\xed\xec\x72\xa4\x26\x35\xf7\xbc\x1a\x8b\xfc\x42\xcc\x70\x9b\xe4\xd5\xc1\xf5\x29\x38\x3e\x17\x16\x35\x5d\x98\x0c\xb9\xd4\x0e\x2d\x3d\xc7\xa9\xb1\xd8\xcd\xc5\x3e\xb8\x76\xdb\x5d\x77\xdd\xbd\xf5\xd4\x72\xbb\xf3\xfa\x7e\x3b\xda\x19\x24\xf1\x7b\x63\xf3\x80\xb6\x5f\x28\x1a\x97\x4a\x6a\x0c\x1f\x29\xfe\x91\xaf\x21\x7f\x07\x00\x00\xff\xff\x3d\x42\x07\xa5\x15\x0d\x00\x00")

func templates_slides_tmpl() ([]byte, error) {
	return bindata_read(
		_templates_slides_tmpl,
		"templates/slides.tmpl",
	)
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		return f()
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() ([]byte, error){
	"templates/action.tmpl": templates_action_tmpl,
	"templates/article.tmpl": templates_article_tmpl,
	"templates/dir.tmpl": templates_dir_tmpl,
	"templates/slides.tmpl": templates_slides_tmpl,
}
// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for name := range node.Children {
		rv = append(rv, name)
	}
	return rv, nil
}

type _bintree_t struct {
	Func func() ([]byte, error)
	Children map[string]*_bintree_t
}
var _bintree = &_bintree_t{nil, map[string]*_bintree_t{
	"templates/action.tmpl": &_bintree_t{templates_action_tmpl, map[string]*_bintree_t{
	}},
	"templates/article.tmpl": &_bintree_t{templates_article_tmpl, map[string]*_bintree_t{
	}},
	"templates/dir.tmpl": &_bintree_t{templates_dir_tmpl, map[string]*_bintree_t{
	}},
	"templates/slides.tmpl": &_bintree_t{templates_slides_tmpl, map[string]*_bintree_t{
	}},
}}
